extends layout

block content
    h1 spatialaddressbook
    p spatialaddressbook with mapjson route
    #map
    #legend_title
        span#legend_items categories
    #legend
        //- we are passing in an object called categories, which we prepared in index.js
        each category, i in categories
            input(id=category, type='checkbox', checked)
            span#legend_items #{category}
            br
    #entryform
        each all_details, i in addresspoints
            p #{all_details.properties.firstname} #{all_details.properties.lastname}: #{all_details.properties.contact_details}

    script(type='text/javascript').
        var map = L.map('map').setView([#{lat}, #{lng}], 7);
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        $.getJSON('/maplayers', function (result) {
            $.each(result, function (i, mlayer) {
                $.getJSON('/mapjson/' + mlayer.properties.category, function (data) {
                    addLayer(data, mlayer.properties.category)
                });
            });
        });

        map.on('click', function (e) {
            var latlng = map.mouseEventToLatLng(e.originalEvent);
            var latitudine = (latlng.lat).toFixed(2);
            var longitudine = (latlng.lng).toFixed(2);

            console.log('hai cliccato sulla mappa a latitudine ' + latitudine + ' e longitudine ' + longitudine + '!');
        });

        function addLayer(layer, name) {
            var address_layer;
            address_layer = L.geoJson(layer, {
                pointToLayer: function (feature, latlng) {
                    return L.circleMarker(latlng, layer.properties);
                },
                style: function (feature) {
                    switch (feature.properties.category) {
                        case 'colleague':
                            return {
                                fillColor: "#e9bc3b",
                                color: "#ac8613",
                                radius: 5,
                                opacity: 1,
                                fillOpacity: 0.8
                            };
                        case 'friend':
                            return {
                                fillColor: "#0099ff",
                                color: "#005f9d",
                                radius: 5,
                                opacity: 1,
                                fillOpacity: 0.8
                            };
                    }
                },
                onEachFeature: function (feature, layer) {
                    layer.bindTooltip(feature.properties.firstname);
                    layer.on('click', function(e) {
                    console.log(feature.properties)
                })
                }
            });

            address_layer.addTo(map);

            $('#' + name).click(function (e) {
                if (map.hasLayer(address_layer)) {
                    map.removeLayer(address_layer);
                } else {
                    map.addLayer(address_layer);
                }
            });
        }
